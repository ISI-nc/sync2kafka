apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "sync2kafka.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "sync2kafka.name" . }}
    helm.sh/chart: {{ include "sync2kafka.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "sync2kafka.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "sync2kafka.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
{{- if or .Values.store .Values.tlsSecret }}
      volumes:
{{-   if .Values.store }}
{{-   end }}
      - name: data
        persistentVolumeClaim:
            claimName: {{ include "sync2kafka.fullname" . }}
{{-   if .Values.tlsSecret }}
      - name: tls
        secret:
            secretName: {{ .Values.tlsSecret }}
{{-   end }}
{{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
          - -store=/data/sync2kafka.bolt
          - -token=$(TOKEN)
          - -http-token=$(HTTP_TOKEN)
{{- if .Values.tlsSecret }}
          - -tls-key=/tls/tls.key
          - -tls-cert=/tls/tls.crt
          - -http-bind=:443
{{- else }}
          - -http-bind=:80
{{- end }}
{{- if .Values.targetTopic }}
          - -topic={{ .Values.targetTopic }}
{{- end }}
{{- if .Values.allowAllTopics }}
          - -allow-all-topics
{{- end }}
{{- if .Values.allowedTopics }}
          - -allowed-topics-file=/config/allowed-topics.list
{{- end }}
{{- if or .Values.store .Values.tlsSecret }}
          volumeMounts:
{{-   if .Values.store }}
          - name: data
            mountPath: /data
{{-   end }}
{{-   if .Values.tlsSecret }}
          - name: tls
            mountPath: /tls
{{-   end }}
{{- end }}
          env:
          - name: TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ include "sync2kafka.fullname" . }}
                key: token
          - name: HTTP_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ include "sync2kafka.fullname" . }}
                key: httpToken
          ports:
            - name: sync2kafka
              containerPort: {{.Values.service.port}}
              protocol: TCP
{{- if .Values.tlsSecret }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 443
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /healthz
              port: 443
              scheme: HTTPS
{{- else }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
          readinessProbe:
            httpGet:
              path: /healthz
              port: 80
{{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
